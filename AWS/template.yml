AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  stori

Parameters:
  Env:
    Default: dev
    Type: String
    Description: Variable que indica el entorno en el que se va a desplegar la plantilla

Resources:
  #Conexiones a Aurora Serverless
  AdminTrans:
    Type: AWS::Serverless::Function
    Properties:
      Runtime: python3.8
      Timeout: 29
      MemorySize: 128
      Handler: lambda_function.lambda_handler
      FunctionName: !Sub AdminTrans-${Env}
      CodeUri: AdminTrans
      Environment:
        Variables:
          MYSQL_HOST: 'ip del host'
          MYSQL_USER: user_code
          MYSQL_PASSWORD: p4ssw0rd
          MYSQL_DATABASE: stori_db
  PermisosAdminTrans:
    Type: AWS::Lambda::Permission
    DependsOn:
      - PointAccess
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Ref AdminTrans
      Principal: apigateway.amazonaws.com
  #Todas las apis generales
  PointAccess:
    Type: AWS::ApiGateway::RestApi
    Properties:
      Body:
        openapi: "3.0.1"
        info:
          title: !Sub PointAccess-${Env}
        paths:
          /transactions:
            get:
              responses:
                "200":
                  description: "200 response"
                  headers:
                    Access-Control-Allow-Origin:
                      schema:
                        type: "string"
                    Access-Control-Allow-Methods:
                      schema:
                        type: "string"
                    Access-Control-Allow-Headers:
                      schema:
                        type: "string"
                  content:
                    application/json:
                      schema:
                        $ref: "#/components/schemas/Empty"
              x-amazon-apigateway-integration:
                uri: !Sub arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:${AdminTrans}/invocations
                httpMethod: "GET"
                responses:
                  default:
                    statusCode: "200"
                    responseParameters:
                      method.response.header.Access-Control-Allow-Methods: "'GET,OPTIONS'"
                      method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'"
                      method.response.header.Access-Control-Allow-Origin: "'*'"
                passthroughBehavior: "when_no_match"
                type: "aws"
            options:
              responses:
                "200":
                  description: "200 response"
                  headers:
                    Access-Control-Allow-Origin:
                      schema:
                        type: "string"
                    Access-Control-Allow-Methods:
                      schema:
                        type: "string"
                    Access-Control-Allow-Headers:
                      schema:
                        type: "string"
                  content:
                    application/json:
                      schema:
                        $ref: "#/components/schemas/Empty"
              x-amazon-apigateway-integration:
                responses:
                  default:
                    statusCode: "200"
                    responseParameters:
                      method.response.header.Access-Control-Allow-Methods: "'GET,OPTIONS'"
                      method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'"
                      method.response.header.Access-Control-Allow-Origin: "'*'"
                passthroughBehavior: "when_no_match"
                type: "mock"
        components:
          schemas:
            Empty:
              title: "Empty Schema"
              type: "object"
        x-amazon-apigateway-binary-media-types:
        - "*/*"
      Mode: overwrite
  ImplementacionAPIS:
    Type: AWS::ApiGateway::Deployment
    Properties:
      RestApiId: !Ref PointAccess
      StageName: !Ref Env
Outputs:
  Api:
    Description: "API"
    Value: !Join [ '', [ 'https://', !Ref PointAccess, '.execute-api.', !Ref 'AWS::Region', '.amazonaws.com/', !Ref Env]]
